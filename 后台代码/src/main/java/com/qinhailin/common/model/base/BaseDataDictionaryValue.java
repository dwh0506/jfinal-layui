package com.qinhailin.common.model.base;

import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings({"serial", "unchecked"})
public abstract class BaseDataDictionaryValue<M extends BaseDataDictionaryValue<M>> extends Model<M> implements IBean {

	/**
	 * 主键
	 */
	public M setId(java.lang.String id) {
		set("id", id);
		return (M)this;
	}
	
	/**
	 * 主键
	 */
	public java.lang.String getId() {
		return getStr("id");
	}

	/**
	 * 数据值
	 */
	public M setValue(java.lang.String value) {
		set("value", value);
		return (M)this;
	}
	
	/**
	 * 数据值
	 */
	public java.lang.String getValue() {
		return getStr("value");
	}

	/**
	 * 数据名称
	 */
	public M setName(java.lang.String name) {
		set("name", name);
		return (M)this;
	}
	
	/**
	 * 数据名称
	 */
	public java.lang.String getName() {
		return getStr("name");
	}

	/**
	 * 排序
	 */
	public M setOrderNum(java.lang.Integer orderNum) {
		set("order_num", orderNum);
		return (M)this;
	}
	
	/**
	 * 排序
	 */
	public java.lang.Integer getOrderNum() {
		return getInt("order_num");
	}

	/**
	 * 备注
	 */
	public M setRemark(java.lang.String remark) {
		set("remark", remark);
		return (M)this;
	}
	
	/**
	 * 备注
	 */
	public java.lang.String getRemark() {
		return getStr("remark");
	}

	/**
	 * 字典编号
	 */
	public M setDictionaryCode(java.lang.String dictionaryCode) {
		set("dictionary_code", dictionaryCode);
		return (M)this;
	}
	
	/**
	 * 字典编号
	 */
	public java.lang.String getDictionaryCode() {
		return getStr("dictionary_code");
	}

}
